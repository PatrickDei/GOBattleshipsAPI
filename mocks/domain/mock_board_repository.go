// Code generated by MockGen. DO NOT EDIT.
// Source: board.go

// Package domain is a generated GoMock package.
package domain

import (
	domain "go-battleships/domain"
	errors "go-battleships/errors"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBoardRepository is a mock of BoardRepository interface.
type MockBoardRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBoardRepositoryMockRecorder
}

// MockBoardRepositoryMockRecorder is the mock recorder for MockBoardRepository.
type MockBoardRepositoryMockRecorder struct {
	mock *MockBoardRepository
}

// NewMockBoardRepository creates a new mock instance.
func NewMockBoardRepository(ctrl *gomock.Controller) *MockBoardRepository {
	mock := &MockBoardRepository{ctrl: ctrl}
	mock.recorder = &MockBoardRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBoardRepository) EXPECT() *MockBoardRepositoryMockRecorder {
	return m.recorder
}

// GetByPlayerIdAndGameId mocks base method.
func (m *MockBoardRepository) GetByPlayerIdAndGameId(playerId string, gameId string) (*domain.Board, *errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByPlayerIdAndGameId", playerId, gameId)
	ret0, _ := ret[0].(*domain.Board)
	ret1, _ := ret[1].(*errors.AppError)
	return ret0, ret1
}

// GetByPlayerIdAndGameId indicates an expected call of GetByPlayerIdAndGameId.
func (mr *MockBoardRepositoryMockRecorder) GetByPlayerIdAndGameId(playerId, gameId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByPlayerIdAndGameId", reflect.TypeOf((*MockBoardRepository)(nil).GetByPlayerIdAndGameId), playerId, gameId)
}

// Save mocks base method.
func (m *MockBoardRepository) Save(arg0 domain.Board) (*domain.Board, *errors.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(*domain.Board)
	ret1, _ := ret[1].(*errors.AppError)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockBoardRepositoryMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockBoardRepository)(nil).Save), arg0)
}
